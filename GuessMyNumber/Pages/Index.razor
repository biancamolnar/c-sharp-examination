@page "/"

<h3>Let's play 'Guess my number'!</h3>
<p>I'm thinking of a number between 0 and 20.</p>
<p>Enter your guess, or -1 to give up.</p>


preventDefault hindrar att hemsidan inte uppdateras när man submitar
<form @onsubmit="CheckGuess" @onsubmit:preventDefault>

    <input type="number" @bind="guessInput" placeholder="Enter your guess here" />
    <button class="btn btn-primary">Guess</button>
</form>

<p class=@resultClass>@resultMessage</p>


@code
{
    string resultClass = "";

    public int theNumber;
    public int guessNum;
    public int guessCount;
    public bool keepGoing;
    public string resultMessage;
    public string guessInput;

    void ColorMessage(string className, int colorTime = 500)
    {
        Task.Run(async () =>
        {
            resultClass = className;
            InvokeAsync(StateHasChanged);
            await Task.Delay(colorTime);
            resultClass = "";
            InvokeAsync(StateHasChanged);
        });
    }

    protected override void OnInitialized()
    {
        theNumber = new Random().Next(20);
    }

    private void CheckGuess()
    {

        // TryParse den försöker göra om en string till en int
        //Om den lyckas så sparar int:en i våran out variablen => "guessNum"
        if (!int.TryParse(guessInput, out guessNum))
        {
            resultMessage = $"Hmmm, that doesn't look like a number. Try again.";
            return;
        }



        if (guessNum == -1)
        {
            resultMessage = $"Hmm, Oh well. I was thinking of {theNumber} better luck next time!";

        }

        else
        {
            guessCount++;

            if (guessNum == theNumber)
            {
                resultMessage = $"You got it in {guessCount} guesses!! Great job!";
                ColorMessage("green", 100000);

            }
            else
            {
                resultMessage = $"Nope, {(guessNum < theNumber ? "higher" : "lower")} than that.";
                ColorMessage("red", 1000);

            }
        }
    }
}